std::map<std::string, Bone>
std::map<std::string, BoidRule
std::map<std::string, BoidState>
std::map<std::string, CurveMapPoint>
std::map<std::string, CurveMap>
std::map<std::string, ColorRampElement>
std::map<std::string, ConstraintTarget>
std::map<std::string, Actuator>
std::map<std::string, Spline>
std::map<std::string, Material>
std::map<std::string, TextBox>
std::map<std::string, TextCharacterFormat>
std::map<std::string, SplinePoint>
std::map<std::string, BezierSplinePoint>
std::map<std::string, DynamicPaintSurface> 
std::map<std::string, FCurveSample>
std::map<std::string, Keyframe>
std::map<std::string, FModifier>
std::map<std::string, DriverTarget>
std::map<std::string, DriverVariable>
std::map<std::string, FModifierEnvelopeControlPoint>
std::map<std::string, FluidMeshVertex> 
std::map<std::string, GPencilLayer>
std::map<std::string, GPencilFrame>
std::map<std::string, GPencilStroke>
std::map<std::string, GPencilStrokePoint>
std::map<std::string, Object>
std::map<std::string, ImagePackedFile>
std::map<std::string, RenderSlot>
std::map<std::string, ShapeKey>
std::map<std::string, UnknownType>
std::map<std::string, LampTextureSlot>
std::map<std::string, LatticePoint>
std::map<std::string, VertexGroupElement>
std::map<std::string, LineStyleTextureSlot>
std::map<std::string, LineStyleColorModifier>
std::map<std::string, LineStyleAlphaModifier>
std::map<std::string, LineStyleThicknessModifier>
std::map<std::string, LineStyleGeometryModifier>
std::map<std::string, Camera>
std::map<std::string, Scene>
std::map<std::string, NodeTree>
std::map<std::string, Mesh>
std::map<std::string, Lamp>
std::map<std::string, Library>
std::map<std::string, Screen>
std::map<std::string, WindowManager>
std::map<std::string, Image>
std::map<std::string, Lattice>
std::map<std::string, Curve>
std::map<std::string, MetaBall>
std::map<std::string, VectorFont>
std::map<std::string, Texture>
std::map<std::string, Brush>
std::map<std::string, World>
std::map<std::string, Group>
std::map<std::string, Key>
std::map<std::string, ID> 
std::map<std::string, Text>
std::map<std::string, Speaker>
std::map<std::string, Sound>
std::map<std::string, Armature>
std::map<std::string, Action>
std::map<std::string, ParticleSettings>
std::map<std::string, Palette
std::map<std::string, GreasePencil>
std::map<std::string, MovieClip>
std::map<std::string, Mask>
std::map<std::string, FreestyleLineStyle> 
std::map<std::string, MaterialTextureSlot>
std::map<std::string, TexPaintSlot>
std::map<std::string, MeshVertex>
std::map<std::string, MeshEdge>
std::map<std::string, MeshTessFace>
std::map<std::string, MeshLoop>
std::map<std::string, MeshPolygon>
std::map<std::string, MeshUVLoopLayer>
std::map<std::string, MeshTextureFaceLayer>
std::map<std::string, MeshTexturePolyLayer> 
std::map<std::string, MeshColorLayer>
std::map<std::string, MeshLoopColorLayer>
std::map<std::string, MeshVertexFloatPropertyLayer>
std::map<std::string, MeshVertexIntPropertyLayer>
std::map<std::string, MeshVertexStringPropertyLayer>

void black_level(float values[3])?



22:31 - TeeTrizZz: es gibt jetzt einige sachen die ignoriert werden müssen, aber das sollte mit ignore und wildcards gehen
22:31 - TeeTrizZz: und zwar alles was string_to_* heißt oder *_to_string
22:31 - TeeTrizZz: das sind alles variablen
22:53 - 2of3: alles klar, das schau ich mitr aber morgen erst an
22:58 - TeeTrizZz: hier noch ein beispiel:
22:58 - TeeTrizZz: enum fixed_oversample_items {
fixed_oversample_items_5 = 5,
fixed_oversample_items_8 = 8,
fixed_oversample_items_11 = 11,
fixed_oversample_items_16 = 16
};

std::map<std::string, int> create_string_to_fixed_oversample_items() {
return {{"5", fixed_oversample_items_5}, {"8", fixed_oversample_items_8}, {"11", fixed_oversample_items_11}, {"16", fixed_oversample_items_16}};
};

std::map<int, std::string> create_fixed_oversample_items_to_string() {
return {{fixed_oversample_items_5, "5"}, {fixed_oversample_items_8, "8"}, {fixed_oversample_items_11, "11"}, {fixed_oversample_items_16, "16"}};
};

const std::map<std::string, int> string_to_fixed_oversample_items = create_string_to_fixed_oversample_items();
const std::map<int, std::string> fixed_oversample_items_to_string = create_fixed_oversample_items_to_string();
22:58 - TeeTrizZz: die beiden create-funktionen und die beiden const std::maps... müssen ignoriert werden, das enum oben aber muss übersetzt werden


 heißen hier VFLOAT2, VFLOAT3, VFLOAT4 und VFLOAT16

